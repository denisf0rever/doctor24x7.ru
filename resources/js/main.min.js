import Swiper from 'swiper/bundle';


document.addEventListener('DOMContentLoaded', function () {


  /*ВЕРХНЕЕ МОБИЛЬНОЕ МЕНЮ БУРГЕР*/

  const burger = document.querySelector('.header__burger');
  const mobileHeaderNav = document.querySelector('.mobile-header-nav');

  // Открытие меню при клике на бургер

  if (burger) {
    burger.onclick = () => {
      mobileHeaderNav.classList.add('mobile-header-nav__opened');
    };

    document.addEventListener('click', (event) => {
      // Проверяем, если клик был вне меню и не по бургеру
      if (!mobileHeaderNav.contains(event.target) && !burger.contains(event.target)) {
        mobileHeaderNav.classList.remove('mobile-header-nav__opened');
      }
    });
  }

  // Закрытие меню при клике вне меню


  /*ВЕРХНЕЕ МОБИЛЬНОЕ МЕНЮ БУРГЕР*/

  /* КАСТОМНЫЙ СЕЛЕКТОР */
  const selectWrappers = document.querySelectorAll('.custom-select');

  if (selectWrappers.length > 0) {
    selectWrappers.forEach(selectWrapper => {
      const select = selectWrapper.querySelector('.custom-select__wrapper');
      const selectArrow = selectWrapper.querySelector('.custom-select__arrow');

      selectWrapper.onclick = (e) => {
        e.stopPropagation(); // предотвращаем всплытие клика
        if (selectArrow) {
          selectArrow.classList.toggle('custom-select__rotate-arrow');
        }
        select.classList.toggle('custom-select__hide');
      };

      document.addEventListener('click', (e) => {
        if (!selectWrapper.contains(e.target)) {
          if (selectArrow) {
            selectArrow.classList.remove('custom-select__rotate-arrow');
          }
          select.classList.add('custom-select__hide');
        }
      });
    });
  }

  /* КАСТОМНЫЙ СЕЛЕКТОР */

  /*ТАБЫ НА ГЛАВНОЙ СТРАНИЦЕ */

  const buttons = document.querySelectorAll('.cards__toggle-item');
  const contents = document.querySelectorAll('.cards__list');

  if (buttons.length > 0) {
    buttons.forEach(button => {
      button.addEventListener('click', function () {
        const tabId = this.getAttribute('data-tab');
        // Deactivate all tabs
        buttons.forEach(btn => btn.classList.remove('cards__toggle-item-active'));
        contents.forEach(content => content.classList.add('cards__hide'));

        // Activate the clicked tab and its content
        this.classList.add('cards__toggle-item-active');
        document.getElementById(tabId).classList.remove('cards__hide');
      });
    });
  }


  /*табы 2 */

  const buttonsМVariant = document.querySelectorAll('.cards__toggle-item-variant');

  if (buttonsМVariant.length > 0) {
    buttonsМVariant.forEach(button => {
      button.addEventListener('click', function () {
        const tabId = this.getAttribute('data-tab');
        // Deactivate all tabs
        buttonsМVariant.forEach(btn => btn.classList.remove('cards__toggle-item-variant-active'));
        contents.forEach(content => content.classList.add('cards__hide'));

        // Activate the clicked tab and its content
        this.classList.add('cards__toggle-item-variant-active');
        document.getElementById(tabId).classList.remove('cards__hide');
      });
    });
  }


  /*ТАБЫ НА ГЛАВНОЙ СТРАНИЦЕ */

  /*МОБИЛЬНОЕ МЕНЮ */

  let isConsultanstsLoaded = false;

  const bottomMenuOpen = document.querySelector('.mobile-panel-bottom__open');
  const topMobilePanel = document.querySelector('.mobile-panel-top');
  const topMobilePanelClose = document.querySelector('.mobile-panel-top__close');

  if (bottomMenuOpen) {
    bottomMenuOpen.onclick = (e) => {
      e.preventDefault();
      bottomMenuOpen.classList.toggle('mobile-panel-bottom__open-link-active')
      topMobilePanel.classList.toggle('mobile-panel-top__active')
      if (!isConsultanstsLoaded) {
        showFirstEmployeeScreen();
      }
    }
  }

  if (topMobilePanelClose) {
    topMobilePanelClose.onclick = () => {
      bottomMenuOpen.classList.remove('mobile-panel-bottom__open-link-active')
      topMobilePanel.classList.remove('mobile-panel-top__active')
      if (!isConsultanstsLoaded) {
        showFirstEmployeeScreen();
      }
    }
  }

  /*МОБИЛЬНОЕ МЕНЮ */

  /*МОБИЛЬНЫЕ ТАБЫ */

  const mobileTabsButtons = document.querySelectorAll('.mobile-panel-top__tub-button');
  const mobileTabs = document.querySelectorAll('.mobile-panel-top__tub');

  const changeMobileTab = (el) => {
    mobileTabsButtons.forEach((element, key) => {
      element.classList.remove('mobile-panel-top__tub-button-active');
      if (element == el) {
        element.classList.add('mobile-panel-top__tub-button-active');
      }
    })
    mobileTabs.forEach((element, key) => {
      element.style.display = 'none';
      if (el.getAttribute('data-tab') == element.getAttribute('data-tab')) {
        element.style.display = 'block';
      }
    })
  }

  if (mobileTabsButtons.length > 0) {
    mobileTabsButtons.forEach((el) => {
      el.onclick = (e) => {
        changeMobileTab(el);
      }
    })
  }

  /*МОБИЛЬНЫЕ ТАБЫ */

  /*ПОЛУЧЕНИЕ ЭКСПЕРТОВ ИЗ JSON */

  let employeesData = {};

  const fetchEmployees = async () => {
    try {
      const response = await fetch('/doctors.json');
      if (!response.ok) {
        throw new Error('Network response was not ok ' + response.statusText);
      }
      employeesData = await response.json();
    } catch (error) {
      console.error('Error fetching the JSON file:', error);
    }
  }

  const createEmployeeCategory = (data) => {
    return `
      <li class="employees__item">
        <div class="employees__category">
          <div class="employees__category-name">${data}</div>
        </div>
      </li>
    `;
  }

  const createEmployeeElement = (data) => {
    return `
      <li class="employees__item">
        <a href="/profile/${data.slug}" class="employees__link">
          <img
            src="/uploads/sfGuard/avatars/${data.avatar}"
            alt="" class="employees__avatar">
          <div class="employees__fullname">${data.name}</div>
          <div class="employees__caption">${data.caption}</div>
        </a>
      </li>
      `;
  }

  const employeesList = document.querySelector('.employees__list');
  const employeesBack = document.querySelector('.employees__item-back');

  let employeeCategoryHistory = [];

  if (employeesBack) {
    employeesBack.onclick = () => {
      while (employeesList.firstChild) {
        employeesList.removeChild(employeesList.firstChild);
      }
      employeeCategoryHistory.splice(employeeCategoryHistory.length - 1, 1);
      showEmployees(employeeCategoryHistory[employeeCategoryHistory.length - 1]);
      if (employeeCategoryHistory.length === 1) {
        employeesBack.classList.add('employees__hide');
      }
    }
  }

  const showEmployees = (employeesDataItemsFull, operationType) => {
    if (employeeCategoryHistory.length === 1) {
      employeesBack.classList.add('employees__hide');
    }
    const employeesDataItems = Object.keys(employeesDataItemsFull);
    if (Array.isArray(employeesDataItemsFull)) {
      for (let i = 0; i < employeesDataItemsFull.length; i++) {
        employeesList.insertAdjacentHTML('beforeend', createEmployeeElement(employeesDataItemsFull[i]));
      }
    }
    else {
      for (let i = 0; i < employeesDataItems.length; i++) {
        employeesList.insertAdjacentHTML('beforeend', createEmployeeCategory(employeesDataItems[i]));
      }
    }
    const employeeItems = document.querySelectorAll('.employees__item');
    if (operationType === 1) {
      employeeCategoryHistory.push(employeesDataItemsFull[employeesDataItems[1]]);
      while (employeesList.firstChild) {
        employeesList.removeChild(employeesList.firstChild);
      }
      showEmployees(employeeCategoryHistory[employeeCategoryHistory.length - 1], 0);
      employeesBack.classList.remove('employees__hide');
    }
    else {
      employeeItems.forEach((el, key) => {
        el.onclick = () => {
          if (employeeCategoryHistory.length < 3) {
            employeeCategoryHistory.push(employeesDataItemsFull[employeesDataItems[key]]);
            while (employeesList.firstChild) {
              employeesList.removeChild(employeesList.firstChild);
            }
            showEmployees(employeeCategoryHistory[employeeCategoryHistory.length - 1], 0);
            employeesBack.classList.remove('employees__hide');
          }
        }
      })
    }
  }

  const showFirstEmployeeScreen = async (operationType) => {
    await fetchEmployees();
    employeeCategoryHistory[0] = employeesData;
    showEmployees(employeesData, operationType);
  }


  const doctorsButton = document.querySelector('#doctors');
  const psychologistsButton = document.querySelector('#psychologists');

  if (doctorsButton) {
    doctorsButton.onclick = (event) => {
      event.preventDefault();
      if (!bottomMenuOpen.classList.contains('mobile-panel-bottom__open-link-active')) {
        employeesList.innerHTML = '';
        employeesData = {};
        employeeCategoryHistory = [];
        bottomMenuOpen.classList.add('mobile-panel-bottom__open-link-active');
        topMobilePanel.classList.add('mobile-panel-top__active');
        if (!isConsultanstsLoaded) {
          showFirstEmployeeScreen(0);
        }
        changeMobileTab(mobileTabsButtons[1]);
      }
    }
  }

  if (psychologistsButton) {
    psychologistsButton.onclick = (event) => {
      event.preventDefault();
      if (!bottomMenuOpen.classList.contains('mobile-panel-bottom__open-link-active')) {
        employeesList.innerHTML = '';
        employeesData = {};
        employeeCategoryHistory = [];
        bottomMenuOpen.classList.add('mobile-panel-bottom__open-link-active');
        topMobilePanel.classList.add('mobile-panel-top__active');
        if (!isConsultanstsLoaded) {
          showFirstEmployeeScreen(1);
        }
        changeMobileTab(mobileTabsButtons[1]);
      }
    }
  }


  /*ПОЛУЧЕНИЕ ЭКСПЕРТОВ ИЗ JSON */

  /*СЛАЙДЕР КОНСУЛЬТАЦИЯ */

  const checkArrowVisibility = (swiper) => {
    const prevArrow = document.querySelector(".consultation-slider__arrow-before");
    const nextArrow = document.querySelector(".consultation-slider__arrow-after");

    if (swiper.isBeginning) {
      prevArrow.style.display = 'none';  // Скрыть стрелку назад
    } else {
      prevArrow.style.display = 'flex'; // Показать стрелку назад
    }

    if (swiper.isEnd) {
      nextArrow.style.display = 'none';  // Скрыть стрелку вперед
    } else {
      nextArrow.style.display = 'flex'; // Показать стрелку вперед
    }
  }

  const consultationSlider = new Swiper(".consultation-slider__slider", {
    slidesPerView: 3,
    spaceBetween: 16,
    navigation: {
      nextEl: ".consultation-slider__arrow-after",
      prevEl: ".consultation-slider__arrow-before",
    },
    breakpoints: {
      // Когда ширина экрана >= 0px
      0: {
        slidesPerView: 1,
        spaceBetween: 10,
      },
      // Когда ширина экрана >= 600px
      600: {
        slidesPerView: 2,
        spaceBetween: 12,
      },
      // Когда ширина экрана >= 1000px
      1000: {
        slidesPerView: 3,
        spaceBetween: 16,
      }
    },
    on: {
      init: function () {
        checkArrowVisibility(this);
      },
      slideChange: function () {
        checkArrowVisibility(this);
      }
    }
  });


  /*СЛАЙДЕР КОНСУЛЬТАЦИЯ */

  /*КОНСУЛЬТАЦИЯ ВАЛИДАЦИЯ ФОРМЫ */

  const validationItem = document.querySelectorAll('.consultation-form__validation-wrapper');
  const validationTitle = document.querySelector('input[name=title]');
  const validationDescription = document.querySelector('textarea[name=description]');
  const validationAge = document.querySelector('input[name=age]');
  const validationUsername = document.querySelector('input[name=username]');
  const validationEmail = document.querySelector('input[name=email]');



  const checkValidationInput = (inputElement, validationRules) => {
    const { name, errorText, validate } = validationRules;

    if (inputElement.getAttribute('name') === name) {
      const inputValue = inputElement.value.trim(); // Убираем лишние пробелы

      // Удаляем старое сообщение об ошибке, если оно существует
      const existingError = document.querySelector(`[error-data=${name}]`);
      if (existingError) {
        existingError.remove();
      }

      // Проверка на наличие ошибок с помощью callback
      const isValid = validate(inputValue);

      if (!isValid) {
        // Создаем div для сообщения об ошибке
        const errorDiv = document.createElement('div');
        errorDiv.textContent = errorText;
        errorDiv.classList.add('consultation-form__error-message');
        errorDiv.setAttribute('error-data', name);

        inputElement.insertAdjacentElement('afterend', errorDiv);
        inputElement.classList.add('consultation-form__input-error');
        return false;
      } else {
        inputElement.classList.remove('consultation-form__input-error');
        return true;
      }
    }
  };


  if (validationItem.length > 0) {
    validationItem.forEach(el => {
      if (el.querySelector('input')) {
        el.querySelector('input').addEventListener('blur', function () {
          if (this.getAttribute('name') === 'title') {
            const titleValidationRules = {
              name: 'title',
              errorText: 'Текст должен быть длиннее 10 символов',
              validate: (value) => value.length > 10, // Функция валидации
            };

            checkValidationInput(this, titleValidationRules);
          }
          if (this.getAttribute('name') === 'age') {
            const ageValidationRules = {
              name: 'age',
              errorText: 'Поле должно быть заполненым',
              validate: (value) => value.length > 0, // Функция валидации
            };
            checkValidationInput(this, ageValidationRules);
          }
          if (this.getAttribute('name') === 'username') {
            const usernameValidationRules = {
              name: 'username',
              errorText: 'Поле должно быть заполненым',
              validate: (value) => value.length > 0, // Функция валидации
            };
            checkValidationInput(this, usernameValidationRules);
          }
          if (this.getAttribute('name') === 'email') {
            const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
            const emailValidationRules = {
              name: 'email',
              errorText: 'Email введен некорректно. Пример: example@domain.ru',
              validate: (value) => emailPattern.test(value), // Функция валидации
            };
            checkValidationInput(this, emailValidationRules);
          }
        });
      }
      if (el.querySelector('textarea')) {
        el.querySelector('textarea').addEventListener('blur', function () {
          if (this.getAttribute('name') === 'description') {
            const descriptionValidationRules = {
              name: 'description',
              errorText: 'Текст должен быть длиннее 10 символов',
              validate: (value) => value.length > 10, // Функция валидации
            };
            checkValidationInput(this, descriptionValidationRules);
          }
        });
      }
    });
  }


  /*КОНСУЛЬТАЦИЯ ВАЛИДАЦИЯ ФОРМЫ */

  /* КОНСУЛЬТАЦИЯ ТАБЫ */

  const consultationTubs = document.querySelectorAll('.consultation-form__tub');
  const consultationPrevBtn = document.querySelector('#consultation-form-prev');
  const consultationNextBtn = document.querySelector('#consultation-form-next');
  const stepNum = document.querySelector('#step');
  const activeTimeline = document.querySelector('.consultation-form__timeline-active');
  const consultationForm = document.querySelector('#consultation-form');

  let activeTub = 1;

  const changeConsultationTub = () => {

    stepNum.innerHTML = activeTub;

    activeTimeline.style.width = `${activeTub * 25}%`;

    if (activeTub === 1) {
      consultationPrevBtn.style.display = 'none';
    }
    else {
      consultationPrevBtn.style.display = 'flex';
    }

    if (activeTub === 4) {
      consultationNextBtn.innerHTML = 'Отправить';
    }
    else {
      consultationNextBtn.innerHTML = 'Продолжить';
    }
  }



  const selectconsultationTub = (direction) => {
    if (direction === 'next') {
      let isValidation = true;
      switch (activeTub) {
        case 2:
          const titleValidationRules = {
            name: 'title',
            errorText: 'Текст должен быть длиннее 10 символов',
            validate: (value) => value.length > 10,
          };
          if (!checkValidationInput(validationTitle, titleValidationRules)) isValidation = false;
          break;
        case 3: {
          const descriptionValidationRules = {
            name: 'description',
            errorText: 'Текст должен быть длиннее 10 символов',
            validate: (value) => value.length > 10, // Функция валидации
          };
          if (!checkValidationInput(validationDescription, descriptionValidationRules)) isValidation = false;
          const ageValidationRules = {
            name: 'age',
            errorText: 'Поле должно быть заполненым',
            validate: (value) => value.length > 0, // Функция валидации
          };
          if (!checkValidationInput(validationAge, ageValidationRules)) isValidation = false;
          break;
        }
        case 4: {
          const usernameValidationRules = {
            name: 'username',
            errorText: 'Поле должно быть заполненым',
            validate: (value) => value.length > 0, // Функция валидации
          };
          if (!checkValidationInput(validationUsername, usernameValidationRules)) isValidation = false;
          const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
          const emailValidationRules = {
            name: 'email',
            errorText: 'Email введен некорректно. Пример: example@domain.ru',
            validate: (value) => emailPattern.test(value), // Функция валидации
          };
          if (!checkValidationInput(validationEmail, emailValidationRules)) isValidation = false;
          break;
        }
        default:
          break;
      }
      if (!isValidation) return;
      if (activeTub === 4) {
        consultationForm.submit();
      }
      else {
        consultationTubs.forEach((el, key) => {
          el.classList.remove('consultation-form__tub-active');
          if (+el.getAttribute('data-step') == activeTub + 1) {
            el.classList.add('consultation-form__tub-active');
          }
        })
        activeTub += 1;
      }
    }
    if (direction === 'prev') {
      consultationTubs.forEach((el, key) => {
        el.classList.remove('consultation-form__tub-active');
        if (+el.getAttribute('data-step') == activeTub - 1) {
          el.classList.add('consultation-form__tub-active');
        }
      })
      activeTub -= 1;
    }
    changeConsultationTub();
  }

  if (stepNum) {
    changeConsultationTub();
  }


  if (consultationPrevBtn) {
    consultationPrevBtn.onclick = () => {
      selectconsultationTub('prev');
    }
  }

  if (consultationNextBtn) {
    consultationNextBtn.onclick = () => {
      selectconsultationTub('next');
    }
  }

  /* КОНСУЛЬТАЦИЯ ТАБЫ */



  /* КОНСУЛЬТАЦИЯ СЕЛЕКТОРЫ */

  const consultationOptions = document.querySelectorAll('.consultation-form__option');
  const rubricInput = document.querySelector('#rubric_id');
  const rubricSpan = document.querySelector('.consultation-form__rubric-input-span');


  const ageConsultationOptions = document.querySelectorAll('.consultation-form__age-type-option');
  const ageInput = document.querySelector('#age_type');
  const ageSpan = document.querySelector('.consultation-form__age-type-input-span');

  if (consultationOptions.length > 0) {
    consultationOptions.forEach(el => {
      el.onclick = () => {
        rubricInput.value = el.value;
        rubricSpan.innerHTML = el.innerHTML;
      }
    })
  }

  if (ageConsultationOptions.length > 0) {
    ageConsultationOptions.forEach(el => {
      el.onclick = () => {
        ageInput.value = el.value;
        ageSpan.innerHTML = el.innerHTML;
      }
    })
  }

  /* КОНСУЛЬТАЦИЯ СЕЛЕКТОРЫ */

  /*КОНСУЛЬТАЦИЯ ФОТО */

  if (document.querySelector('#file-upload')) {
    document.querySelector('#file-upload').addEventListener('change', function (event) {
      const maxLength = 20;
      let fileName = event.target.files[0] ? event.target.files[0].name : 'Загрузить фото';

      if (fileName.length > maxLength) {
        fileName = fileName.substring(0, maxLength) + '...';
      }

      document.querySelector('.consultation-form__input-photo-text').textContent = fileName;
    });
  }


  const addPhotoBtn = document.querySelector('.consultation-form__add-photo');
  const additionalPhotosWrapper = document.querySelector('.consultation-form__additional-photos'); // добавлен точный селектор
  let deletePhoto = document.querySelectorAll('.consultation-form__delete-photo');

  const photoInput = `
    <div class="consultation-form__new-photo">
      <input type="file" name="image">
      <span class="consultation-form__delete-photo">удалить</span>
    </div>
  `;

  if (addPhotoBtn && additionalPhotosWrapper) {
    addPhotoBtn.onclick = () => {
      additionalPhotosWrapper.insertAdjacentHTML('beforeend', photoInput); // добавляем в конец контейнера
      deletePhoto = document.querySelectorAll('.consultation-form__delete-photo');
      if (deletePhoto.length > 0) {
        deletePhoto.forEach(el => {
          el.onclick = (e) => {
            if (e.target.closest('.consultation-form__new-photo')) {
              e.target.closest('.consultation-form__new-photo').remove();
            }
            deletePhoto = document.querySelectorAll('.consultation-form__delete-photo');
          }
        })
      }
    };
  }



  /*КОНСУЛЬТАЦИЯ ФОТО */

  /* КОММЕНТАРИИ В КОНСУЛЬТАЦИЯХ */

  const bodyElement = document.querySelector('body');

  //CONTACT MENU

  const commentMenuBtn = document.querySelectorAll('.comment__menu-btn');
  const commentMenu = document.querySelector('.comment-menu');
  const commentButtons = document.querySelectorAll('.comment-menu__button')
  const hideButton = document.querySelector('.comment-menu__hide-button');
  const deleteButton = document.querySelector('.comment-menu__button-delete');
  const editButton = document.querySelector('.comment-menu__button-edit');
  const blockButton = document.querySelector('.comment-menu__button-block');


  commentMenuBtn.forEach((el, key) => {
    el.onclick = () => {
      if (deleteButton) {
        deleteButton.setAttribute('data-id', el.getAttribute('data-id'));
        editButton.setAttribute('href', `//cabinet.puzkarapuz.ru/cabinet/comments/${el.getAttribute('data-id')}/edit`);
      }
      commentMenu.classList.toggle('comment-menu__hide');
      if (commentButtons.length > 0) {
        commentButtons.forEach(btn => {
          btn.setAttribute('data-id', el.getAttribute('data-id'));
        })
      };
    }
  })


  if (hideButton) {
    hideButton.onclick = () => { commentMenu.classList.add('comment-menu__hide'); }
  }


  //INPUT SIZE
  let textarea = document.querySelector(".full-form__question-input");

  if (textarea) {
    textarea.style.height = textarea.scrollHeight + "px";
    textarea.addEventListener("input", function () {
      if (!document.querySelector('.full-form__first-screen').classList.contains('full-form__fullscreen')) {
        this.style.height = "auto";
        this.style.height = this.scrollHeight + "px";
      }
    });
  }

  //NEW COMMENT
  const fullForm = document.querySelector('.comments__full-form');
  const activeForm = document.querySelectorAll('.comments__form');
  const fullFormNextBtn = document.querySelector('.full-form__next-btn');
  const fullFormBackBtn = document.querySelector('.full-form__back-btn');
  const fullFormConfirmBtn = document.querySelector('.full-form__confirm-btn');
  const fullFormConfirmAuthBtn = document.querySelector('.full-form__confirm-btn-authenticated');
  const formFirstScreen = document.querySelector('.full-form__first-screen');
  const formSecondScreen = document.querySelector('.full-form__second-screen');
  const formQuestionInput = document.querySelector('.full-form__question-input');
  const progressBar = document.querySelector('.full-form__progress');
  const formName = document.querySelector('.full-form__name');
  const formEmail = document.querySelector('.full-form__email');
  // const hiddenAnsWerId = document.querySelector('#hidden_answer_id');
  // const consultationCommentAnswerToAnswerId = document.querySelector('#sf_consultation_comment_answer_to_answer_id');
  const textareaFake = document.querySelector('.comments__textarea-fake');
  const newAnsWerButton = document.querySelectorAll('.comment__answ');
  const toAnswerId = document.querySelector('#to_answer_id');


  const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
  let formQuestionInputLength = 0;
  let formValidation = { name: false, email: false };
  const progressBarTime = 10;

  //reset form before opening new
  const resetForm = (activeFake) => {
    textarea.value = '';
    textarea.style.height = textarea.scrollHeight + "px";
    if (!(activeFake.parentNode.getAttribute('data-id') === textareaFake.parentNode.getAttribute('data-id'))) {
      textareaFake.classList.remove('hide');
      textareaFake.disabled = false;
    }
    newAnsWerButton.forEach((element) => {
      if (!(activeFake.parentNode.getAttribute('data-id') === element.parentNode.getAttribute('data-id'))) {
        element.classList.remove('hide');
      }
    });
    activeForm.forEach((element) => {
      element.reset();
    })
    progressBar.style.setProperty('--pseudo-element-width', 0);
    formFirstScreen.classList.remove('hide');
    formSecondScreen.classList.add('hide');
    formValidation = { name: false, email: false };
  }

  //setting new form
  const setForm = (el, isFocused) => {
    resetForm(el);
    el == textareaFake ? toAnswerId.disabled = true : toAnswerId.disabled = false;
    if (el.parentNode.getAttribute('data-id')) {
      toAnswerId.setAttribute('value', el.parentNode.getAttribute('data-id'));
    }
    else {
      toAnswerId.setAttribute('value', '');
    }
    // if (bodyElement.classList.contains('user-authenticated')) {
    //   if (el.parentNode.getAttribute('data-id') !== null) {
    //     hiddenAnsWerId.setAttribute('value', el.parentNode.getAttribute('data-id'));
    //     consultationCommentAnswerToAnswerId.setAttribute('value', el.parentNode.getAttribute('data-id'));
    //   }
    //   el.classList.add('hide');
    //   el.disabled = true;
    //   el.insertAdjacentElement('afterend', fullForm);
    //   fullForm.classList.remove('hide');
    //   fullFormConfirmAuthBtn.classList.remove('hide');
    //   if (isFocused === true) formQuestionInput.focus();
    //   formName.disabled = true;
    //   formEmail.disabled = true;
    //   fullFormNextBtn.classList.add('hide');
    // }


    // else {
    // if (el.parentNode.getAttribute('data-id') !== null) {
    //   hiddenAnsWerId.setAttribute('value', el.parentNode.getAttribute('data-id'));
    //   consultationCommentAnswerToAnswerId.setAttribute('value', el.parentNode.getAttribute('data-id'));
    // }
    el.classList.add('hide');
    el.disabled = true;
    el.insertAdjacentElement('afterend', fullForm);
    fullForm.classList.remove('hide');
    if (isFocused === true) formQuestionInput.focus();
    // }
  }

  if (fullForm) {

    setForm(textareaFake, false);

    textareaFake.onclick = () => {
      setForm(textareaFake, true);
    }

    newAnsWerButton.forEach((el) => {
      el.onclick = () => {
        setForm(el, true);
      }
    })

    // progress bar and buttons visuals
    formQuestionInput.addEventListener("input", (event) => {
      formQuestionInputLength = event.target.value.length;
      if (formQuestionInputLength <= progressBarTime) {
        progressBar.style.setProperty('--pseudo-element-width', `${formQuestionInputLength / progressBarTime * 100}%`);
      }
      else {
        progressBar.style.setProperty('--pseudo-element-width', `100%`);
      }
      if (bodyElement.classList.contains('user-authenticated')) {
        if (formQuestionInputLength >= progressBarTime) {
          fullFormConfirmAuthBtn.classList.remove('full-form__confirm-btn-authenticated-unactive');
          fullFormConfirmAuthBtn.classList.add('full-form__confirm-btn-authenticated-active');
        }
        else {
          fullFormConfirmAuthBtn.classList.remove('full-form__confirm-btn-authenticated-active');
          fullFormConfirmAuthBtn.classList.add('full-form__confirm-btn-authenticated-unactive');
        }

      }
      else {
        if (formQuestionInputLength >= progressBarTime) {
          fullFormNextBtn.classList.remove('full-form__next-btn-unactive');
          fullFormNextBtn.classList.add('full-form__next-btn-active');
        }
        else {
          fullFormNextBtn.classList.remove('full-form__next-btn-active');
          fullFormNextBtn.classList.add('full-form__next-btn-unactive');
        }

      }
    });

    //button next
    fullFormNextBtn.onclick = (event) => {
      event.preventDefault();
      if (formQuestionInputLength >= progressBarTime) {
        formFirstScreen.classList.add('hide');
        formSecondScreen.classList.remove('hide');
      }
    }
    //button back
    fullFormBackBtn.onclick = (event) => {
      event.preventDefault();
      formFirstScreen.classList.remove('hide');
      formSecondScreen.classList.add('hide');
    }

    //form email validation
    formEmail.addEventListener("input", (event) => {
      if (emailRegex.test(formEmail.value.trim())) {
        formValidation.email = true;
      }
      else {
        formValidation.email = false;
      }
      if (formValidation.name === true && formValidation.email === true) {
        fullFormConfirmBtn.classList.remove('full-form__confirm-btn-unactive');
        fullFormConfirmBtn.classList.add('full-form__confirm-btn-active');
      }
      else {
        fullFormConfirmBtn.classList.add('full-form__confirm-btn-unactive');
        fullFormConfirmBtn.classList.remove('full-form__confirm-btn-active');
      }
    });

    //form name validation
    formName.addEventListener("input", (event) => {
      if (formName.value.trim().length > 0) {
        formValidation.name = true;
      }
      else {
        formValidation.name = false;
      }
      if (formValidation.name === true && formValidation.email === true) {
        fullFormConfirmBtn.classList.remove('full-form__confirm-btn-unactive');
        fullFormConfirmBtn.classList.add('full-form__confirm-btn-active');
      }
      else {
        fullFormConfirmBtn.classList.add('full-form__confirm-btn-unactive');
        fullFormConfirmBtn.classList.remove('full-form__confirm-btn-active');
      }
    });

    //submit form
    fullFormConfirmBtn.onclick = (event) => {
      event.preventDefault();
      if (fullFormConfirmBtn.classList.contains('full-form__confirm-btn-active')) {
        fullFormConfirmBtn.closest('.comments__form').submit();
        fullFormConfirmBtn.closest('.comments__form').reset();
        setForm(textareaFake, false);
      }
    }

    fullFormConfirmAuthBtn.onclick = (event) => {
      event.preventDefault();
      if (fullFormConfirmAuthBtn.classList.contains('full-form__confirm-btn-authenticated-active')) {
        fullFormConfirmAuthBtn.closest('.comments__form').submit();
        fullFormConfirmAuthBtn.closest('.comments__form').reset();
        setForm(textareaFake, false);
      }
    }

  }


  /* КОММЕНТАРИИ В КОНСУЛЬТАЦИЯХ */

  /*ЛОГИН ВАЛИДАЦИЯ */
  const loginInputWrappes = document.querySelectorAll('.popup-form__input-wrapper');


  if (loginInputWrappes.length > 0) {
    loginInputWrappes.forEach(el => {
      const label = el.querySelector('.popup-form__label');
      const input = el.querySelector('.popup-form__input');

      setTimeout(() => {
        console.log(input.value)
        if (input.value.trim()) {
          label.classList.add('popup-form__label-active');
        }
      }, 100)

      // Обработчик фокуса
      input.addEventListener('focus', () => {
        label.classList.add('popup-form__label-active');
      });

      // Обработчик потери фокуса
      input.addEventListener('blur', () => {
        if (!input.value.trim()) {
          label.classList.remove('popup-form__label-active');
        }
      });

    });
  }


  const checkAllInputs = (inputs) => {
    let isAllValid = true;
    for (let i = 0; i < inputs.length; i++) {
      if (inputs[i].value === '') isAllValid = false;
    }
    return isAllValid;
  }

  const avatarSubmit = document.querySelector('.popup-form__submit');


  const inputsValidation = document.querySelectorAll('.popup-form__form input[type="text"], .popup-form__form input[type="password"]');


  inputsValidation.forEach((el, key) => {
    el.addEventListener("input", function (event) {
      if (checkAllInputs(inputsValidation)) {
        avatarSubmit.classList.remove('popup-form__submit-disabled');
        avatarSubmit.disabled = false;
      }
      else {
        avatarSubmit.classList.add('popup-form__submit-disabled');
        avatarSubmit.disabled = true;
      }
    })
  })

  /*ЛОГИН ВАЛИДАЦИЯ */

  /*ЛОГИН ПОКАЗАТЬ/СКРЫТЬ ПАРОЛЬ */


  const avatarPassword = document.querySelector('#password');
  const hidePassword = document.querySelector('.popup-form__password-img');

  if (hidePassword) {
    hidePassword.onclick = () => {
      if (avatarPassword.type === 'text') avatarPassword.type = 'password';
      else if (avatarPassword.type === 'password') avatarPassword.type = 'text';
    }
  }

  /*ЛОГИН ПОКАЗАТЬ/СКРЫТЬ ПАРОЛЬ */

  /*ТОГГЛ */
  const checkbox = document.getElementById('answer_form');
  const switchTextOn = document.querySelector('.form-switch__on-text');
  const switchTextOff = document.querySelector('.form-switch__off-text');

  // Изначальное состояние текста
  if (switchTextOn && switchTextOff) {
    switchTextOn.style.visibility = checkbox.checked ? 'visible' : 'hidden';
    switchTextOff.style.visibility = checkbox.checked ? 'hidden' : 'visible';
  }

  if (checkbox) {
    checkbox.addEventListener('change', function () {
      switchTextOn.style.visibility = this.checked ? 'visible' : 'hidden';
      switchTextOff.style.visibility = this.checked ? 'hidden' : 'visible';
    });
  }

  /*ТОГГЛ */


  /*СЛАЙДЕР ОПЛАТА ОТЗЫВЫ  */

  const paymentSlides = document.querySelectorAll('.payment-reviews__slide.payment-reviews-slide.swiper-slide');
  const paymentSlidesWrapper = document.querySelector('.payment-reviews__swiper-wrapper.swiper-wrapper');

  const paymentSlider = new Swiper(".payment-reviews__slider", {
    speed: 0,
    allowTouchMove: false,
    breakpoints: {
      0: {
        slidesPerView: 'auto',
        direction: 'vertical',
        autoHeight: false,
        spaceBetween: 10,
      },
      540: {
        slidesPerView: 'auto',
        autoHeight: false,
        direction: 'vertical',
        spaceBetween: 10,
      },
      960: {
        slidesPerView: 2,
        direction: 'horizontal',
        spaceBetween: '3%',
      }
    }
  });


  if (paymentSlidesWrapper) {
    document.fonts.ready.then(() => {
      paymentSlidesWrapper.style.maxHeight = `${paymentSlides[0].offsetHeight + paymentSlides[1].offsetHeight + 8}px`;
    });
  }

  if (paymentSlider) {
    paymentSlider.on('slideChange', () => {
      if (window.innerWidth < 960) {
        let maxHeight = [0, 0];
        for (let i = 0; i < paymentSlides.length; i++) {
          if (i == paymentSlider.activeIndex) {
            maxHeight[0] = paymentSlides[i].offsetHeight;
          }
          if (i == paymentSlider.activeIndex + 1) {
            maxHeight[1] = paymentSlides[i].offsetHeight;
          }
        }
        paymentSlidesWrapper.style.maxHeight = `${maxHeight[0] + maxHeight[1] + 8}px`;
      }
    });
  }

  if (document.querySelector('.payment-reviews__arrow-after')) {
    document.querySelector('.payment-reviews__arrow-after').addEventListener('click', () => {
      // if (window.innerWidth > 960) {
      // Переход на два слайда вперед
      paymentSlider.slideTo(paymentSlider.activeIndex + 2);
      // } else {
      //   paymentSlider.slideNext();
      // }
    });
  }

  if (document.querySelector('.payment-reviews__arrow-before')) {
    document.querySelector('.payment-reviews__arrow-before').addEventListener('click', () => {
      // if (window.innerWidth > 960) {
      // Переход на два слайда назад
      paymentSlider.slideTo(paymentSlider.activeIndex - 2);
      // } else {
      //   paymentSlider.slidePrev();
      // }
    });
  }

  /*СЛАЙДЕР ОПЛАТА ОТЗЫВЫ  */


  /* МАСКА ИНПУТА  */

  const phoneInputs = document.querySelectorAll('.promo__input-phone');

  if (phoneInputs.length > 0) {
    phoneInputs.forEach(phoneInput => {
      // Устанавливаем начальное значение
      phoneInput.value = "+7-";

      phoneInput.addEventListener('input', function (event) {
        let input = phoneInput.value.replace(/\D/g, ''); // Удаляем все нечисловые символы, кроме "+7"

        // Проверка, чтобы +7 не стиралось
        if (!input.startsWith("7")) {
          input = "7" + input; // Добавляем 7, если удалили
        }

        // Формируем маску с учётом префикса +7
        let formattedInput = "+7-";
        if (input.length > 1) {
          formattedInput += input.substring(1, 4);
        }
        if (input.length >= 4) {
          formattedInput += "-" + input.substring(4, 7);
        }
        if (input.length >= 7) {
          formattedInput += "-" + input.substring(7, 9);
        }
        if (input.length >= 9) {
          formattedInput += "-" + input.substring(9, 11);
        }

        // Сохраняем текущую позицию курсора
        let cursorPosition = phoneInput.selectionStart;

        // Обновляем значение поля
        phoneInput.value = formattedInput;

        // Восстанавливаем позицию курсора
        if (event.inputType === 'deleteContentBackward' && cursorPosition > 2) {
          phoneInput.setSelectionRange(cursorPosition, cursorPosition);
        } else {
          phoneInput.setSelectionRange(phoneInput.value.length, phoneInput.value.length);
        }
      });
    });
  }

  /*МАСКА ИНПУТА  */

  /*ПРОВЕРКА НА ДОПОЛНИТЕЛЬНЫЕ ИНПУТЫ ТАРИФ */

  const promoItems = document.querySelectorAll('.promo__item');
  const additionalInputs = document.querySelectorAll('.promo__input');

  const clearAllPromoAdditionalInputs = () => {
    if (additionalInputs.length > 0) {
      additionalInputs.forEach(addInput => {
        addInput.disabled = true;
      })
    }
  }

  if (promoItems.length > 0) {
    promoItems.forEach(promoItem => {
      const localAdditionalInputs = promoItem.querySelectorAll('.promo__input');
      const radio = promoItem.querySelector('.promo__input-radio');

      clearAllPromoAdditionalInputs();

      radio.addEventListener('change', (event) => {
        if (event.target.checked) {
          clearAllPromoAdditionalInputs();
          if (localAdditionalInputs.length > 0) {
            localAdditionalInputs.forEach(localAddInput => {
              localAddInput.disabled = false;
            })
          }
        }
      });

    })
  }

  /*ПРОВЕРКА НА ДОПОЛНИТЕЛЬНЫЕ ИНПУТЫ ТАРИФ */

  /*РАССЧЕТ СТОИМОСТИ ОПЛАТЫ */

  const firstCalc = document.querySelectorAll('.first-radio__list .first-radio__input');
  const secondCalc = document.querySelectorAll('.second-radio__list .second-radio__input');
  const promoCalc = document.querySelectorAll('.promo__list .promo__item');

  let firstPriceModificator = 0;
  let secondPriceModificator = 0;

  if (firstCalc.length > 0 && secondCalc.length > 0) {
    firstPriceModificator = +firstCalc[0].value;
    secondPriceModificator = +secondCalc[0].value;
  }

  const setPrices = () => {
    const priceMod = firstPriceModificator + secondPriceModificator;
    promoCalc.forEach(promoItem => {
      const basicPrice = promoItem.querySelector('.promo__input-radio').getAttribute('stadart-price');
      const input = promoItem.querySelector('.promo__input-radio');
      const span = promoItem.querySelector('.promo__price');
      span.innerHTML = `${+basicPrice + priceMod} &#8381;`;
      input.value = +basicPrice + priceMod;
    })
  }

  if (promoCalc.length > 0) {
    setPrices();
  }

  if (firstCalc.length > 0) {
    firstCalc.forEach((radio) => {
      radio.addEventListener('change', (event) => {
        if (event.target.checked) {
          firstPriceModificator = +radio.value;
          setPrices();
        }
      });
    });
  }

  if (secondCalc.length > 0) {
    secondCalc.forEach((radio) => {
      radio.addEventListener('change', (event) => {
        if (event.target.checked) {
          secondPriceModificator = +radio.value;
          setPrices();
        }
      });
    });
  }

  /*РАССЧЕТ СТОИМОСТИ ОПЛАТЫ */

  // const form = document.querySelector('.payment-form__form'); // Выберите вашу форму по нужному селектору

  // if (form) {
  //   form.addEventListener('submit', function (event) {
  //     event.preventDefault(); // Отключаем стандартное поведение

  //     const formData = new FormData(form);

  //     // Просмотр содержимого FormData для отладки
  //     for (let [name, value] of formData.entries()) {
  //       console.log(name, value);
  //     }
  //   });
  // }

  /*ЛАЙКИ */

  const likeComments = document.querySelectorAll('.comment__main-comment, .comment__sub-comment');
  const csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');

  const actionLike = (likesAmount, likeImg, url, state, type) => {
    const currentUrl = window.location.href;
    const segments = currentUrl.split('/');
    const slug = segments[segments.length - 1];
    if (type === 'like') {
      if (state === 1) {
        likesAmount.innerHTML = +likesAmount.innerHTML + 1;
        likeImg.querySelector('use').setAttribute('xlink:href', '#like_filled_2ff7--react');
        ;
      }
      if (state === 0) {
        likesAmount.innerHTML = +likesAmount.innerHTML - 1;
        likeImg.querySelector('use').setAttribute('xlink:href', '#like_3e48--react');
      }
    }
    if (type === 'dislike') {
      if (state === 1) {
        likeImg.querySelector('use').setAttribute('xlink:href', '#dislike_filled_56bd--react');
      }
      if (state === 0) {
        likeImg.querySelector('use').setAttribute('xlink:href', '#dislike_5d1d--react');
      }
    }
    if (csrfToken) {
      fetch(url, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-TOKEN': csrfToken
        },
        body: JSON.stringify({
          'state': +state,
          'slug': +slug
        })
      })
        .then(async response => {
          if (response.ok) {
          } else {
            const errorText = await response.text();
            console.error('Ошибка при отправке POST-запроса:', {
              status: response.status,
              statusText: response.statusText,
              url,
              errorText
            });
          }
        })
        .catch(error => {
          console.error('Ошибка сети или другая проблема:', {
            message: error.message,
            stack: error.stack,
            url
          });
        });
    }
  }

  if (likeComments.length > 0) {
    likeComments.forEach(comment => {
      const likelink = comment.querySelector('.comment__like-link');
      const dislikelink = comment.querySelector('.comment__dislike-link');
      const likesAmount = comment.querySelector('.comment__like-amount');
      const likeImg = comment.querySelector('.comment__like-img');
      const dislikeImg = comment.querySelector('.comment__dislike-img');


      likelink.addEventListener('click', function (event) {
        event.preventDefault();
        if (!(likeImg.querySelector('use').getAttribute('xlink:href') === '#like_filled_2ff7--react')) {
          if (dislikeImg.querySelector('use').getAttribute('xlink:href') === '#dislike_filled_56bd--react') {
            actionLike(likesAmount, dislikeImg, dislikelink.href, 0, 'dislike');
          }
          actionLike(likesAmount, likeImg, likelink.href, 1, 'like');
        }
        else {
          actionLike(likesAmount, likeImg, likelink.href, 0, 'like');
        }
      });


      dislikelink.addEventListener('click', function (event) {
        event.preventDefault();
        if (!(dislikeImg.querySelector('use').getAttribute('xlink:href') === '#dislike_filled_56bd--react')) {
          if (likeImg.querySelector('use').getAttribute('xlink:href') === '#like_filled_2ff7--react') {
            actionLike(likesAmount, likeImg, likelink.href, 0, 'like');
          }
          actionLike(likesAmount, dislikeImg, dislikelink.href, 1, 'dislike');
        }
        else {
          actionLike(likesAmount, dislikeImg, dislikelink.href, 0, 'dislike');
        }
      });


    });
  }


  /*ЛАЙКИ */

  /* ДЕЙСТВИЯ КОНСУЛЬТАЦИИ */

  const menuPostAction = (csrfToken, url, body, isReload) => {
    if (csrfToken) {
      fetch(url, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-TOKEN': csrfToken
        },
        body: JSON.stringify(body)
      })
        .then(async response => {
          if (response.ok) {
            if (isReload) {
              window.location.reload();
            }
          } else {
            const errorText = await response.text();
            console.error('Ошибка при отправке POST-запроса:', {
              status: response.status,
              statusText: response.statusText,
              url,
              errorText
            });
          }
        })
        .catch(error => {
          console.error('Ошибка сети или другая проблема:', {
            message: error.message,
            stack: error.stack,
            url
          });
        });
    }
  }

  // const requestDoc = document.querySelector('.small-menu__link-doc');


  // if (requestDoc) {
  //   const url = window.location.href;
  //   const segments = url.split('/');
  //   const consultationId = segments[segments.length - 1];
  //   requestDoc.onclick = (e) => {
  //     e.preventDefault();
  //     console.log(requestDoc.href);
  //     // menuPostAction(csrfToken, requestDoc.href, { 'id': +consultationId }, true)
  //   }
  // }

  /* ДЕЙСТВИЯ КОНСУЛЬТАЦИИ */

  /*МЕНЮ КОММЕНТАРИЯ */

  const menuCommentBlock = document.querySelector('.comment-menu__button-block');
  const menuCommentUnlock = document.querySelector('.comment-menu__button-unlock');

  if (menuCommentBlock) {
    menuCommentBlock.onclick = (e) => {
      e.preventDefault();
      if (confirm('Заблокировать?')) {
        menuPostAction(csrfToken, menuCommentBlock.href, { 'id': +menuCommentBlock.getAttribute('data-id') }, true);
      }
    }
  }

  if (menuCommentUnlock) {
    menuCommentUnlock.onclick = (e) => {
      e.preventDefault();
      menuPostAction(csrfToken, menuCommentUnlock.href, { 'id': +menuCommentUnlock.getAttribute('data-id') }, true);
    }
  }

  /*МЕНЮ КОММЕНТАРИЯ */

  /*ТАБЫ КАТЕГОРИИ */

  (() => {
    const buttons = document.querySelectorAll('.category-info__tab');
    const contents = document.querySelectorAll('.category-info__tab-content');

    if (buttons.length > 0 && contents.length > 0) {
      buttons.forEach(button => {
        button.addEventListener('click', function () {
          const tabId = this.getAttribute('data-tab');
          buttons.forEach(btn => btn.classList.remove('category-info__tab--active'));
          contents.forEach(content => content.classList.remove('category-info__tab-content--active'));
  
          this.classList.add('category-info__tab--active');
          document.getElementById(`tab-${tabId}`).classList.add('category-info__tab-content--active');
        });
      });
    }
  })();


  /*ТАБЫ КАТЕГОРИИ */

  /*ФИЛЬТР АЛФАВИТ КАТЕГОРИИ */

  const catFilterItem = document.querySelectorAll('.themes__sort-item');
  const catFilterLetter = document.querySelectorAll('.themes__item');

  const addCloseBtn = (element) => {
    const closeBtn = `
      <div class="themes__close-btn"></div>
    `;
    element.insertAdjacentHTML('beforeend', closeBtn);
    const delEl = document.querySelector('.themes__close-btn');
    delEl.addEventListener('click', (event) => {
      event.stopPropagation(); // Останавливаем всплытие события
      shawAllCategories();
      delEl.remove();
    });
  };

  const shawAllCategories = () => {
    if (catFilterItem.length > 0) {
      catFilterItem.forEach(el => {
        el.classList.remove('themes__sort-item--active');
      })
    }
    const categories = document.querySelectorAll('.themes__subitem');
    if (categories.length > 0) {
      categories.forEach(el => {
        el.classList.remove('hide');
      })
    }
  }

  const isCategotyEmpty = (letterItem, number) => {
    letterItem.classList.remove('hide');
    const themes = letterItem.querySelectorAll('.themes__subitem');

    let isEmpty = true;
    themes.forEach(theme => {
      theme.classList.add('hide');
      if (+theme.getAttribute('data-sort-target') == number) {
        theme.classList.remove('hide');
        isEmpty = false;
      }
    })
    if (isEmpty) {
      letterItem.classList.add('hide');
    }
  }

  const removeActive = (item) => {
    item.forEach(el => {
      el.classList.remove('themes__sort-item--active');
    })
  }

  if (catFilterItem.length > 0 ){
    catFilterItem.forEach(el => {
      el.onclick = () => {
        removeActive(catFilterItem);
        el.classList.add('themes__sort-item--active');
        const delEl = document.querySelector('.themes__close-btn');
        if (delEl) {
          delEl.remove();
        }
        addCloseBtn(el);
        const num = el.getAttribute('data-sort-btn');
        if (catFilterLetter.length > 0) {
          catFilterLetter.forEach(el => {
            isCategotyEmpty(el, num);
          })
        }

      }
    })
  }

  /*ФИЛЬТР АЛФАВИТ КАТЕГОРИИ */

  /*ОТКРЫТИЕ ЧАТА ПРИ КЛИКЕ НА "НАПИСАТЬ СООБЩЕНИЕ"*/

  const categoryCard = document.querySelectorAll('.category-card');
  const chatWrapper = document.querySelector('.chat__wrapper');
  const chatFullname = document.querySelector('.chat__fullname');
  const chatAvatar = document.querySelector('.chat__avatar-img')

  if (categoryCard.length > 0) {
    categoryCard.forEach(card => {
      const msgButtons = card.querySelectorAll('.category-card__msg');
      const fullname = card.querySelector('.category-card__fullname');
      const avatar = card.querySelector('.category-card__avatar');
      if (msgButtons.length > 0) {
        msgButtons.forEach(btn => {
          btn.onclick = (e) => {
            e.preventDefault();
            if (fullname && avatar) {
              if (chatWrapper) {
                chatWrapper.classList.add('chat__wrapper--active');
                chatFullname.innerHTML = fullname.innerHTML;
                chatAvatar.setAttribute('src', avatar.getAttribute('src'));
              } 
            }
          }
        })
      }
    })
  }

  /*ОТКРЫТИЕ ЧАТА ПРИ КЛИКЕ НА "НАПИСАТЬ СООБЩЕНИЕ"*/

  /*ЗАКРЫТИЕ ЧАТА */

  const chatCloseBtn = document.querySelector('.chat__close');

  if (chatCloseBtn) {
    chatCloseBtn.onclick = () => {
      chatWrapper.classList.remove('chat__wrapper--active');
    }
  }

  /*ЗАКРЫТИЕ ЧАТА */

});
